//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaginaWeb_LiceoExperimental
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UsuariosEntities : DbContext
    {
        public UsuariosEntities()
            : base("name=UsuariosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Genero> Genero { get; set; }
        public virtual DbSet<IdentificadorPersona> IdentificadorPersona { get; set; }
        public virtual DbSet<MecanismoDeContacto> MecanismoDeContacto { get; set; }
        public virtual DbSet<Nacionalidad> Nacionalidad { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<TipoDeTelefono> TipoDeTelefono { get; set; }
        public virtual DbSet<TipoIdentificadorPersona> TipoIdentificadorPersona { get; set; }
        public virtual DbSet<TipoMecanismoDeContacto> TipoMecanismoDeContacto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int ActualizarBeca(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarBeca", iDParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuario_Result> ConsultarUsuario(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuario_Result>("ConsultarUsuario", correoParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuario_ID_Result> ConsultarUsuario_ID(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuario_ID_Result>("ConsultarUsuario_ID", iDParameter);
        }
    
        public virtual int EliminarUsuario(Nullable<long> usuarioID)
        {
            var usuarioIDParameter = usuarioID.HasValue ?
                new ObjectParameter("UsuarioID", usuarioID) :
                new ObjectParameter("UsuarioID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuario", usuarioIDParameter);
        }
    
        public virtual int Insertar_Usuario(string correoElectronico, string nombre, string contrasena, Nullable<byte> rol, Nullable<bool> becado, Nullable<bool> permisos, string primerN, string primerA, string segundoN, string segundoA, Nullable<System.DateTime> fechaNacimiento, string lugarNacimiento, Nullable<byte> generoID, Nullable<byte> nacionalidad, string valorID, Nullable<byte> tipoID, string valorContacto)
        {
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(byte));
    
            var becadoParameter = becado.HasValue ?
                new ObjectParameter("Becado", becado) :
                new ObjectParameter("Becado", typeof(bool));
    
            var permisosParameter = permisos.HasValue ?
                new ObjectParameter("Permisos", permisos) :
                new ObjectParameter("Permisos", typeof(bool));
    
            var primerNParameter = primerN != null ?
                new ObjectParameter("PrimerN", primerN) :
                new ObjectParameter("PrimerN", typeof(string));
    
            var primerAParameter = primerA != null ?
                new ObjectParameter("PrimerA", primerA) :
                new ObjectParameter("PrimerA", typeof(string));
    
            var segundoNParameter = segundoN != null ?
                new ObjectParameter("SegundoN", segundoN) :
                new ObjectParameter("SegundoN", typeof(string));
    
            var segundoAParameter = segundoA != null ?
                new ObjectParameter("SegundoA", segundoA) :
                new ObjectParameter("SegundoA", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var generoIDParameter = generoID.HasValue ?
                new ObjectParameter("GeneroID", generoID) :
                new ObjectParameter("GeneroID", typeof(byte));
    
            var nacionalidadParameter = nacionalidad.HasValue ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(byte));
    
            var valorIDParameter = valorID != null ?
                new ObjectParameter("ValorID", valorID) :
                new ObjectParameter("ValorID", typeof(string));
    
            var tipoIDParameter = tipoID.HasValue ?
                new ObjectParameter("TipoID", tipoID) :
                new ObjectParameter("TipoID", typeof(byte));
    
            var valorContactoParameter = valorContacto != null ?
                new ObjectParameter("ValorContacto", valorContacto) :
                new ObjectParameter("ValorContacto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertar_Usuario", correoElectronicoParameter, nombreParameter, contrasenaParameter, rolParameter, becadoParameter, permisosParameter, primerNParameter, primerAParameter, segundoNParameter, segundoAParameter, fechaNacimientoParameter, lugarNacimientoParameter, generoIDParameter, nacionalidadParameter, valorIDParameter, tipoIDParameter, valorContactoParameter);
        }
    
        public virtual ObjectResult<ListarBecados_Result> ListarBecados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarBecados_Result>("ListarBecados");
        }
    
        public virtual ObjectResult<ListarNoBecados_Result> ListarNoBecados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarNoBecados_Result>("ListarNoBecados");
        }
    
        public virtual ObjectResult<ListarNoBecadosID_Result> ListarNoBecadosID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarNoBecadosID_Result>("ListarNoBecadosID", iDParameter);
        }
    
        public virtual ObjectResult<ListarNoBecadosNombre_Result> ListarNoBecadosNombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarNoBecadosNombre_Result>("ListarNoBecadosNombre", nombreParameter);
        }
    
        public virtual ObjectResult<ListarUsuarios_Result> ListarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarUsuarios_Result>("ListarUsuarios");
        }
    
        public virtual int ModificarUsuario(Nullable<long> usuarioID, string correoElectronico, string nombreUsuario, string contrasenna, Nullable<byte> rol, Nullable<bool> becado, Nullable<bool> permisos, string primerNombre, string primerApellido, string segundoApellido, string segundoNombre, Nullable<System.DateTime> fechaNacimiento, string lugarNacimiento, Nullable<byte> generoID, Nullable<byte> nacionalidad, string valorID, Nullable<byte> tipoID, string valorContacto)
        {
            var usuarioIDParameter = usuarioID.HasValue ?
                new ObjectParameter("UsuarioID", usuarioID) :
                new ObjectParameter("UsuarioID", typeof(long));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var nombreUsuarioParameter = nombreUsuario != null ?
                new ObjectParameter("NombreUsuario", nombreUsuario) :
                new ObjectParameter("NombreUsuario", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(byte));
    
            var becadoParameter = becado.HasValue ?
                new ObjectParameter("Becado", becado) :
                new ObjectParameter("Becado", typeof(bool));
    
            var permisosParameter = permisos.HasValue ?
                new ObjectParameter("Permisos", permisos) :
                new ObjectParameter("Permisos", typeof(bool));
    
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var lugarNacimientoParameter = lugarNacimiento != null ?
                new ObjectParameter("LugarNacimiento", lugarNacimiento) :
                new ObjectParameter("LugarNacimiento", typeof(string));
    
            var generoIDParameter = generoID.HasValue ?
                new ObjectParameter("GeneroID", generoID) :
                new ObjectParameter("GeneroID", typeof(byte));
    
            var nacionalidadParameter = nacionalidad.HasValue ?
                new ObjectParameter("Nacionalidad", nacionalidad) :
                new ObjectParameter("Nacionalidad", typeof(byte));
    
            var valorIDParameter = valorID != null ?
                new ObjectParameter("ValorID", valorID) :
                new ObjectParameter("ValorID", typeof(string));
    
            var tipoIDParameter = tipoID.HasValue ?
                new ObjectParameter("TipoID", tipoID) :
                new ObjectParameter("TipoID", typeof(byte));
    
            var valorContactoParameter = valorContacto != null ?
                new ObjectParameter("ValorContacto", valorContacto) :
                new ObjectParameter("ValorContacto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarUsuario", usuarioIDParameter, correoElectronicoParameter, nombreUsuarioParameter, contrasennaParameter, rolParameter, becadoParameter, permisosParameter, primerNombreParameter, primerApellidoParameter, segundoApellidoParameter, segundoNombreParameter, fechaNacimientoParameter, lugarNacimientoParameter, generoIDParameter, nacionalidadParameter, valorIDParameter, tipoIDParameter, valorContactoParameter);
        }
    
        public virtual ObjectResult<ListarEstudiantes_Result> ListarEstudiantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudiantes_Result>("ListarEstudiantes");
        }
    
        public virtual ObjectResult<ListarEstudiantesID_Result> ListarEstudiantesID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudiantesID_Result>("ListarEstudiantesID", iDParameter);
        }
    
        public virtual ObjectResult<ListarEstudiantesNombre_Result> ListarEstudiantesNombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudiantesNombre_Result>("ListarEstudiantesNombre", nombreParameter);
        }
    
        public virtual ObjectResult<BuscarEstudiante_Result> BuscarEstudiante(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarEstudiante_Result>("BuscarEstudiante", nombreParameter);
        }
    
        public virtual ObjectResult<Ingresar_Result> Ingresar(string correo, string contra)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("Contra", contra) :
                new ObjectParameter("Contra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ingresar_Result>("Ingresar", correoParameter, contraParameter);
        }
    }
}
