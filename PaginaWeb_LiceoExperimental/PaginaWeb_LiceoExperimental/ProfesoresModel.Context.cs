//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaginaWeb_LiceoExperimental
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProfesoresEntities : DbContext
    {
        public ProfesoresEntities()
            : base("name=ProfesoresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Profesores> Profesores { get; set; }
        public virtual DbSet<Seccion> Seccion { get; set; }
    
        public virtual int AgregarProfesor(string descripcion, byte[] imagen, string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, string contacto, string numeroTelefono)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarProfesor", descripcionParameter, imagenParameter, primerNombreParameter, segundoNombreParameter, primerApellidoParameter, segundoApellidoParameter, contactoParameter, numeroTelefonoParameter);
        }
    
        public virtual int AgregarSeccion(string descripcion, Nullable<int> profesor)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var profesorParameter = profesor.HasValue ?
                new ObjectParameter("Profesor", profesor) :
                new ObjectParameter("Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarSeccion", descripcionParameter, profesorParameter);
        }
    
        public virtual ObjectResult<ConsultarProfesor_ID_Result> ConsultarProfesor_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProfesor_ID_Result>("ConsultarProfesor_ID", iDParameter);
        }
    
        public virtual ObjectResult<ConsultarProfesor_Nombre_Result> ConsultarProfesor_Nombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProfesor_Nombre_Result>("ConsultarProfesor_Nombre", nombreParameter);
        }
    
        public virtual ObjectResult<ConsultarSeccion_Descripcion_Result> ConsultarSeccion_Descripcion(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSeccion_Descripcion_Result>("ConsultarSeccion_Descripcion", descripcionParameter);
        }
    
        public virtual int EliminarProfesor(Nullable<int> profesorID)
        {
            var profesorIDParameter = profesorID.HasValue ?
                new ObjectParameter("ProfesorID", profesorID) :
                new ObjectParameter("ProfesorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProfesor", profesorIDParameter);
        }
    
        public virtual ObjectResult<ListarProfesor_PorNombre_Result> ListarProfesor_PorNombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarProfesor_PorNombre_Result>("ListarProfesor_PorNombre", nombreParameter);
        }
    
        public virtual ObjectResult<ListarProfesores_Result> ListarProfesores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarProfesores_Result>("ListarProfesores");
        }
    
        public virtual ObjectResult<ListarSecciones_Result> ListarSecciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarSecciones_Result>("ListarSecciones");
        }
    
        public virtual ObjectResult<ConsultarSeccion_ID_Result> ConsultarSeccion_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSeccion_ID_Result>("ConsultarSeccion_ID", iDParameter);
        }
    
        public virtual int EliminarSeccion(Nullable<int> seccionID)
        {
            var seccionIDParameter = seccionID.HasValue ?
                new ObjectParameter("SeccionID", seccionID) :
                new ObjectParameter("SeccionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarSeccion", seccionIDParameter);
        }
    
        public virtual int ModificarProfesor(Nullable<int> profesorID, string descripcion, byte[] imagen, string primerNombre, string segundoNombre, string primerApellido, string segundoApellido, string contacto, string numeroTelefono)
        {
            var profesorIDParameter = profesorID.HasValue ?
                new ObjectParameter("ProfesorID", profesorID) :
                new ObjectParameter("ProfesorID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            var primerNombreParameter = primerNombre != null ?
                new ObjectParameter("PrimerNombre", primerNombre) :
                new ObjectParameter("PrimerNombre", typeof(string));
    
            var segundoNombreParameter = segundoNombre != null ?
                new ObjectParameter("SegundoNombre", segundoNombre) :
                new ObjectParameter("SegundoNombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarProfesor", profesorIDParameter, descripcionParameter, imagenParameter, primerNombreParameter, segundoNombreParameter, primerApellidoParameter, segundoApellidoParameter, contactoParameter, numeroTelefonoParameter);
        }
    
        public virtual int ModificarSeccion(Nullable<int> seccionID, string descripcion, Nullable<int> profesor)
        {
            var seccionIDParameter = seccionID.HasValue ?
                new ObjectParameter("SeccionID", seccionID) :
                new ObjectParameter("SeccionID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var profesorParameter = profesor.HasValue ?
                new ObjectParameter("Profesor", profesor) :
                new ObjectParameter("Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarSeccion", seccionIDParameter, descripcionParameter, profesorParameter);
        }
    }
}
